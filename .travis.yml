language: node_js
sudo: required
services:
  - docker
branches:
  only:
    - main
cache:
  directories:
    - docker_images
before_install:
  # Clean install on any new build
  - npm run clean
install:
  # This needs to be investigated further why npm install now takes longer to finish and causes Travis to timeout and terminute the build.
  # See https://github.com/cerner/terra-toolkit/pull/744 for description of error.
  - travis_wait 30 npm install
before_script:
  # Load Docker Cache
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker load -i docker_images/images.tar || true
jobs:
  include:
    - stage: danger lint and jest
      script:
        # clear the cache of any old build artifacts
        - rm -rf ./travis-build
        - npm run danger
        - npm run lint
        - npm run jest
        # Prime the docker cache
        - docker-compose --file ./packages/terra-functional-testing/lib/docker/docker-compose.yml pull
        # Save docker cache
        - docker save -o docker_images/images.tar $(docker images -a -q)

    - stage: wdio
      name: wdio
      # Don't clean install
      before_install: skip
      script:
        # using the travis env section to set env variables seems to break cache
        - npm run wdio

    - stage: mocha
      # Don't clean install
      before_install: skip
      script:
        - npm run mocha

    - stage: publish & deploy
      script:
        - rm -rf ./travis-build
        # push tags to github based on output written to file
        - npm run terra -- release
      before_deploy:
        # Build again for deployment because we need the Public path to be updated.
        - TERRA_DEV_SITE_PUBLIC_PATH='/terra-toolkit/' npm run compile:prod
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN # Set in travis-ci.com dashboard
        local_dir: $TRAVIS_BUILD_DIR/build
        on:
          branch: main

stages:
  - danger lint and jest
  - wdio
  - mocha
  - name: publish & deploy
    if: type != pull_request
